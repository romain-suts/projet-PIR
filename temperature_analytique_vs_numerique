# -*- coding: utf-8 -*-
"""
Created on Mon Mar 10 19:21:16 2025

@author: louau
"""


# Modules nécessaires
import numpy as np
import matplotlib.pyplot as plt 
plt.close('all')


# CONSTANTES
densite_glace = 917  # kg/m^3
densite_silicate = 3500  # kg/m^3
G = 6.674E-11  # SI

# PARAMÈTRES DE GANYMEDE
pourcentage_glace = 40 / 100
pourcentage_silicate = 60 / 100
rayon = 2612.1E3  # m
masse = 1.48E23  # kg
rayon_silicate = 1960629.417 # m

# ECHANTILLONAGE DU RAYON
distr_rayon = np.linspace(0, rayon, 10000)
h = distr_rayon[1]

# CALCUL DU FLUX DE TEMPERATURE
prod_radio = 6.6E-9 # W/m^3
k_silicate = 0.22 # W/m²/K
k_glace = 2.1 # W/m²/K
T_surf = 125 # K
flux_surf = 0.004 # W/m² 

def source_chaleur(r) :
    if r <= rayon_silicate :
        return prod_radio
    else :
        return 0

def profil_temperature() :
    T = np.zeros(len(distr_rayon))
    for i in range (1, len(distr_rayon)) : 
        if distr_rayon[i] < rayon_silicate : 
       
            def dTdr1(r, source_chaleur) : 
                return - prod_radio * r / (3 * k_silicate)
            
            T[i] = T[i-1] + h * dTdr1(distr_rayon[i], source_chaleur)
            
    
        else : 
            
            def dTdr2(r) : 
                return - flux_surf / k_glace

            T[i] = T[i-1] + h * dTdr2(distr_rayon[i])
            
    # Réajustement du profil grâce à la température de surface
    for i in range(len(distr_rayon)) :
        T[i] = T[i] - T[len(distr_rayon) - 1] + T_surf
        
    # SOLUTION ANALYTIQUE DU PROFIL DE TEMPERATURE (pour comparaison)
    
    T_analytique = np.zeros(len(distr_rayon))
    T_analytique[0] = source_chaleur(0) * rayon**2 / (6 * k_silicate)
    
    for i in range(1, len(distr_rayon)) :
        if distr_rayon[i] < rayon_silicate :
            T_analytique[i] = source_chaleur(distr_rayon[i]) / (6 * k_silicate) * (rayon**2 - distr_rayon[i]**2)
        else :
            T_analytique[i] = T_surf + (T_analytique[7505] - T_surf) * (distr_rayon[i] - rayon) / (rayon_silicate - rayon)
                
    return T, T_analytique

profil_temperature, profil_temperature_analytique = profil_temperature()

plt.figure()
plt.plot(distr_rayon*10**(-3),profil_temperature_analytique, color='red', label="solution analytique")
plt.plot(distr_rayon*1E-3, profil_temperature, color='blue', label="solution numerique")
plt.plot([1960.6294169970793,1960.6294169970793],[0,40000],'--')
plt.xlabel("Rayon (en km)")
plt.ylabel("Température (K)")
plt.title("Variation de la température dans Ganymède")
plt.legend()
plt.grid()












        
